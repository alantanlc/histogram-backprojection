%% Clear command window and workspace
clear; clc;

%% Get files
Files = dir('./Training');
for k=1:length(File

%% Read Image
I = double(imread('./Training/110.jpg'));
r = I(:,:,1);
g = I(:,:,2);
b = I(:,:,3);

%% Compute opponent color axes
opponent_rg = r - g;
opponent_by = 2 .* b - r - g;
opponent_wb = r + g + b;

%% Axes min, max, and range
min_rg = 0 - 256;
max_rg = 256 - 0;
min_by = 2 * 0 - 256 - 256;
max_by = 2 * 256 - 0 - 0;
min_wb = 0 + 0 + 0;
max_wb = 256 + 256 + 256;
range_rg = max_rg - min_rg;
range_by = max_by - min_by;
range_wb = max_wb - min_wb;

%% Normalize color axes
norm_rg = (opponent_rg - min_rg) ./ range_rg;
norm_by = (opponent_by - min_by) ./ range_by;
norm_wb = (opponent_wb - min_wb) ./ range_wb;
c = [norm_rg(:) norm_by(:) norm_wb(:)];

scatter3(norm_rg(:), norm_by(:), norm_wb(:), 25, c);
grid on
axis([0 1 0 1 0 1]);
xlabel('rg');
ylabel('by');
zlabel('wb');

%%  Quantization
% num_bin_rg = 16;
% num_bin_by = 16;
% num_bin_wb = 8;
% q_rg = 1 / num_bin_rg;
% q_by = 1 / num_bin_by;
% q_wb = 1 / num_bin_wb;
% bin_rg = floor(norm_rg/q_rg)+1; % Quantized & Indexed Channel [1 ~ Bin]
% bin_by = floor(norm_by/q_by)+1; % Quantized & Indexed Channel [1 ~ Bin]
% bin_wb = floor(norm_wb/q_wb)+1; % Quantized & Indexed Channel [1 ~ Bin]

%% Histogram
% H = zeros(num_bin_rg, num_bin_by, num_bin_wb);
% I_size = size(I);
% for i = 1:I_size(1)
%     for j = 1:I_size(2)
%         [bin_rg(i,j), bin_by(i,j), bin_wb(i,j)]
%         H(bin_rg(i,j), bin_by(i,j), bin_wb(i,j)) = H(bin_rg(i,j), bin_by(i,j), bin_wb(i,j)) + 1;
%     end
% end

%% Show
% S = round((H/max(H(:)))*25); % Matrix normalized to [0 ~ 25]
% for i = 1:num_bin_rg
%     for j = 1:num_bin_by
%         for k = 1:num_bin_wb
%             [i,j,k]
%         end
%     end
% end
% hold off
% grid on
% axis([1 num_bin_rg 1 num_bin_by 1 num_bin_wb]);
% xlabel('rg bins');
% ylabel('by bins');
% zlabel('wb bins');